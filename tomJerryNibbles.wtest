import tomJerryNibbles.*


// si uno de los assert esta mal, cuando corra los resultados van a fallar ambos//.

describe "test de tom y sus victimas" {
  test "al inicio tom tiene velocidad de diez y energia de cincuenta" {   
    assert.equals(10,tom.velMax())
    assert.equals (50,tom.energia())
  }

  test "tom come jerry y su velMax es 15.2 y energia es 102" {
    tom.comer(jerry)
    assert.equals(15.2,tom.velMax())
    assert.equals(102, tom.energia())
  }

  test "ahora tom corre 24 metros y velMax es 14 y energia 90" {
    tom.comer(jerry)
    tom.correr(24)
    assert.equals(14,tom.velMax())
    assert.equals(90, tom.energia())

  }

  test "tom come a nibbles" {
    tom.comer(nibbles)
    assert.equals(18.7, tom.velMax())
    assert.equals(137, tom.energia())   // su energia seria 97 y su vel max 14.7//
  }

  test "jerry cumple tres a√±os y tom lo come entonces su vel es 25.9 y su energia 209" {
    jerry.cumplirAnios()
    jerry.cumplirAnios()
    jerry.cumplirAnios()
    tom.comer(jerry)
    assert.equals(25.9, tom.velMax())
    assert.equals(209, tom.energia())
  }

  test "si tom corre 38 metros su velocidad pasa a ser 24 y su energia 190" {
      tom.correr(38)
      assert.equals(24, tom.velMax())
      assert.equals(190, tom.energia())
  }

  test "tom come a mouse y su energia es de 82 y su velocidad de 13.2" {
    tom.comer(mouse)
    assert.equals(82, tom.energia())
    assert.equals(13.2, tom.velMax())
  }

  test "tom puede cazar a una distancia de 100 luego de comer a mouse" {
    tom.comer(mouse)
    assert.that(tom.puedeCazarAlgo(50))
  }
}











describe "Grupo de test" {

  test "test 1" {
    assert.equals(100, 50+50)
  }

  test "test 3" {
    assert.that(true)
  }

  test "test 4" {
    assert.notThat(false)
  }

}